steps:
  # 1) Setup workspace (get latest DB from data branch)
  - name: 'python:3.10'
    id: 'setup'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "🚀 Starting pipeline..."
        apt-get update -y && apt-get install -y git-lfs
        git lfs install --force

        # Ensure branches are synced
        git fetch --prune origin +refs/heads/*:refs/remotes/origin/*

        # Get DB from data branch into main workspace
        git checkout -B data refs/remotes/origin/data
        git lfs pull --include="newsletter.db"
        cp newsletter.db /tmp/newsletter.db || echo "⚠️ No DB found yet"
        git checkout -B main refs/remotes/origin/main
        cp /tmp/newsletter.db newsletter.db || echo "⚠️ No DB copied, will init fresh"

        echo "✅ Setup complete"
        ls -lh newsletter.db || true

  # 2) Housekeeping + Harvest (every 12h)
  - name: 'python:3.10'
    id: 'harvest'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "$_TRIGGER_TYPE" != "harvest" ]; then
          echo "⏭️ Skipping harvest"; exit 0
        fi
        apt-get update -y && apt-get install -y git-lfs
        git lfs install
        git config --global user.email "bot@github.com"
        git config --global user.name "Newsletter Bot"
        git config --global --add safe.directory /workspace

        python -m pip install --upgrade pip
        pip install -r requirements.txt

        # Init DB if missing
        if [ ! -f newsletter.db ]; then
          python init_db.py
        fi

        # Run housekeeping first (clear old data)
        python housekeeping.py

        # Then run scraper
        python run_harvest.py

        echo "📊 DB after harvest:"
        ls -lh newsletter.db

        # Save DB back to data branch
        cp newsletter.db /tmp/newsletter_updated.db
        rm -f newsletter.db

        git fetch origin data
        git checkout data
        git pull --ff-only origin data
        git lfs install

        cp /tmp/newsletter_updated.db newsletter.db
        git add newsletter.db || true
        git commit -m "Harvest run $(date --iso-8601=seconds)" || echo "No changes to commit"

        git remote remove push-tmp 2>/dev/null || true
        git remote add push-tmp "https://oauth2:$$_GITHUB_TOKEN@github.com/$$_GITHUB_REPO.git"
        git push push-tmp data

        echo "✅ Harvest + housekeeping complete!"

secrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/github-token/versions/latest
      env: '_GITHUB_TOKEN'
    - versionName: projects/${PROJECT_ID}/secrets/github-repo/versions/latest
      env: '_GITHUB_REPO'

options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY
  volumes:
    - name: pip-cache
      path: /root/.cache/pip

timeout: 3600s

